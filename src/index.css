@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark theme by default for awwwards aesthetic */
    --background: 220 25% 8%;
    --foreground: 220 15% 95%;

    --card: 220 25% 10%;
    --card-foreground: 220 15% 95%;

    --popover: 220 25% 12%;
    --popover-foreground: 220 15% 95%;

    --primary: 265 85% 55%;
    --primary-foreground: 220 15% 5%;

    --secondary: 220 20% 15%;
    --secondary-foreground: 220 15% 85%;

    --muted: 220 20% 12%;
    --muted-foreground: 220 10% 60%;

    --accent: 280 85% 65%;
    --accent-foreground: 220 15% 5%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 220 15% 95%;

    --border: 220 20% 18%;
    --input: 220 20% 15%;
    --ring: 265 85% 55%;

    /* Advanced color palette for dark theme */
    --electric: 265 85% 55%;
    --electric-foreground: 220 15% 5%;
    --neon: 280 85% 65%;
    --neon-foreground: 220 15% 5%;
    --cyan: 185 85% 55%;
    --cyan-foreground: 220 15% 5%;
    --success: 145 65% 45%;
    --success-foreground: 220 15% 95%;
    
    /* Advanced gradients for premium look */
    --gradient-primary: linear-gradient(135deg, hsl(265 85% 55%) 0%, hsl(280 85% 65%) 50%, hsl(295 85% 75%) 100%);
    --gradient-electric: linear-gradient(135deg, hsl(265 85% 55%) 0%, hsl(185 85% 55%) 100%);
    --gradient-cosmic: linear-gradient(135deg, hsl(220 25% 8%) 0%, hsl(265 85% 15%) 50%, hsl(280 85% 20%) 100%);
    --gradient-neon: linear-gradient(135deg, hsl(280 85% 65%) 0%, hsl(295 85% 75%) 50%, hsl(320 85% 65%) 100%);
    --gradient-hero: radial-gradient(ellipse at center, hsl(265 85% 55% / 0.3) 0%, hsl(220 25% 8%) 70%);
    --gradient-mesh: 
      radial-gradient(at 40% 20%, hsl(265 85% 55% / 0.3) 0px, transparent 50%),
      radial-gradient(at 80% 0%, hsl(280 85% 65% / 0.2) 0px, transparent 50%),
      radial-gradient(at 0% 50%, hsl(185 85% 55% / 0.2) 0px, transparent 50%),
      radial-gradient(at 80% 50%, hsl(295 85% 75% / 0.3) 0px, transparent 50%),
      radial-gradient(at 0% 100%, hsl(320 85% 65% / 0.2) 0px, transparent 50%),
      radial-gradient(at 80% 100%, hsl(240 85% 55% / 0.3) 0px, transparent 50%),
      radial-gradient(at 0% 0%, hsl(300 85% 70% / 0.2) 0px, transparent 50%);
    
    /* Advanced shadows and glows */
    --shadow-electric: 0 10px 40px -10px hsl(265 85% 55% / 0.4), 0 0 60px -15px hsl(265 85% 55% / 0.3);
    --shadow-neon: 0 0 30px hsl(280 85% 65% / 0.5), 0 0 60px hsl(280 85% 65% / 0.3), 0 0 100px hsl(280 85% 65% / 0.1);
    --shadow-elegant: 0 25px 80px -15px hsl(220 25% 5% / 0.4);
    --shadow-glass: inset 0 1px 0 hsl(220 15% 95% / 0.1), 0 1px 3px hsl(220 25% 5% / 0.2);
    --glow-electric: 0 0 20px hsl(265 85% 55% / 0.6), 0 0 40px hsl(265 85% 55% / 0.4), 0 0 80px hsl(265 85% 55% / 0.2);
    
    /* Glass morphism effects */
    --glass-bg: hsl(220 20% 15% / 0.8);
    --glass-border: hsl(220 15% 95% / 0.1);
    --glass-backdrop: blur(20px) saturate(180%);

  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    cursor: none; /* Custom cursor */
  }
  
  /* Smooth scrolling */
  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  /* Glass morphism utility */
  .glass {
    background: var(--glass-bg);
    backdrop-filter: var(--glass-backdrop);
    border: 1px solid var(--glass-border);
  }
  
  /* Glow effects */
  .glow-electric {
    box-shadow: var(--glow-electric);
  }
  
  /* Mesh gradient background */
  .mesh-gradient {
    background: var(--gradient-mesh);
  }
  
  /* Interactive elements */
  .interactive-card {
    @apply transition-all duration-500 ease-out;
    transform-style: preserve-3d;
  }
  
  .interactive-card:hover {
    transform: translateY(-10px) rotateX(5deg) rotateY(5deg);
  }
  
  /* Custom cursor */
  .cursor-dot {
    position: fixed;
    width: 8px;
    height: 8px;
    background: hsl(var(--electric));
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.1s ease;
  }
  
  .cursor-outline {
    position: fixed;
    width: 40px;
    height: 40px;
    border: 2px solid hsl(var(--electric) / 0.5);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9998;
    transition: all 0.15s ease;
  }
  
  /* Parallax scrolling */
  .parallax {
    transform-style: preserve-3d;
    perspective: 1000px;
  }
  
  /* Text animations */
  .text-reveal {
    overflow: hidden;
    position: relative;
  }
  
  .text-reveal::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: hsl(var(--electric));
    transform: translateX(-100%);
    animation: reveal 1.5s ease-out forwards;
  }
  
  @keyframes reveal {
    to {
      transform: translateX(100%);
    }
  }
  
  /* Magnetic button effect */
  .magnetic {
    transition: transform 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }
}